---
# Source: home-assistant/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-home-assistant
  labels:
    helm.sh/chart: home-assistant-0.2.89
    app.kubernetes.io/name: home-assistant
    app.kubernetes.io/instance: my-home-assistant
    app.kubernetes.io/version: "2024.11.3"
    app.kubernetes.io/managed-by: Helm
---
# Source: home-assistant/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-home-assistant
  labels:
    helm.sh/chart: home-assistant-0.2.89
    app.kubernetes.io/name: home-assistant
    app.kubernetes.io/instance: my-home-assistant
    app.kubernetes.io/version: "2024.11.3"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: home-assistant
    app.kubernetes.io/instance: my-home-assistant
---
# Source: home-assistant/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-home-assistant
  labels:
    helm.sh/chart: home-assistant-0.2.89
    app.kubernetes.io/name: home-assistant
    app.kubernetes.io/instance: my-home-assistant
    app.kubernetes.io/version: "2024.11.3"
    app.kubernetes.io/managed-by: Helm
spec:
  serviceName: my-home-assistant
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: home-assistant
      app.kubernetes.io/instance: my-home-assistant
  template:
    metadata:
      labels:
        app.kubernetes.io/name: home-assistant
        app.kubernetes.io/instance: my-home-assistant
      annotations:
    spec:
      serviceAccountName: my-home-assistant
      securityContext:
        {}
      containers:
        - name: home-assistant
          securityContext:
            {}
          image: "ghcr.io/home-assistant/home-assistant:2024.11.3"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8123
              protocol: TCP
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 2
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          volumeMounts:
          - mountPath: /config
            name: my-home-assistant
      volumes:
      - name: my-home-assistant
        emptyDir: {}
---
# Source: home-assistant/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-home-assistant
  labels:
    helm.sh/chart: home-assistant-0.2.89
    app.kubernetes.io/name: home-assistant
    app.kubernetes.io/instance: my-home-assistant
    app.kubernetes.io/version: "2024.11.3"
    app.kubernetes.io/managed-by: Helm
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
spec:
  ingressClassName: traefik
  tls:
    - hosts:
        - "hass.beaners.club"
      secretName: home-assistant-tls
  rules:
    - host: "hass.beaners.club"
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: my-home-assistant
                port:
                  number: 8080
---
# Source: home-assistant/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-home-assistant-test-connection"
  labels:
    helm.sh/chart: home-assistant-0.2.89
    app.kubernetes.io/name: home-assistant
    app.kubernetes.io/instance: my-home-assistant
    app.kubernetes.io/version: "2024.11.3"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['my-home-assistant:8080']
  restartPolicy: Never
